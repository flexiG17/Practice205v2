const assert = require('assert');
const { execSync } = require('child_process');

const runAppWithInput = (input) => {
  try {
    const command = input === '' ? 'node app.js' : `node app.js ${input}`;
    const output = execSync(command).toString();
    return output;
  } catch (error) {
    return error.stdout.toString();
  }
}

const testApp = () => {
  console.log('–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...\n');

  console.log('–¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–º–Ω–æ–∂–µ–Ω–∏—è —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞ (5)');
  const output1 = runAppWithInput('5');
  assert.ok(output1.includes('–£–º–Ω–æ–∂–µ–Ω–Ω–æ–µ –Ω–∞ 2: 10'), '–¢–µ—Å—Ç 1 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω');
  assert.ok(output1.includes('–£–º–Ω–æ–∂–µ–Ω–Ω–æ–µ –Ω–∞ 3: 15'), '–¢–µ—Å—Ç 1 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω');
  assert.ok(output1.includes('–£–º–Ω–æ–∂–µ–Ω–Ω–æ–µ –Ω–∞ 5: 25'), '–¢–µ—Å—Ç 1 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω');
  console.log('–¢–µ—Å—Ç 1 –ø—Ä–æ–π–¥–µ–Ω\n');

  console.log('–¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–º–Ω–æ–∂–µ–Ω–∏—è –¥—Ä–æ–±–Ω–æ–≥–æ —á–∏—Å–ª–∞ (2.5)');
  const output2 = runAppWithInput('2.5');
  assert.ok(output2.includes('–£–º–Ω–æ–∂–µ–Ω–Ω–æ–µ –Ω–∞ 2: 5'), '–¢–µ—Å—Ç 2 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω');
  assert.ok(output2.includes('–£–º–Ω–æ–∂–µ–Ω–Ω–æ–µ –Ω–∞ 3: 7.5'), '–¢–µ—Å—Ç 2 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω');
  assert.ok(output2.includes('–£–º–Ω–æ–∂–µ–Ω–Ω–æ–µ –Ω–∞ 5: 12.5'), '–¢–µ—Å—Ç 2 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω');
  console.log('–¢–µ—Å—Ç 2 –ø—Ä–æ–π–¥–µ–Ω\n');

  console.log('–¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞');
  const output3 = runAppWithInput('');
  assert.ok(output3.includes('–£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞'), '–¢–µ—Å—Ç 3 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω');
  console.log('–¢–µ—Å—Ç 3 –ø—Ä–æ–π–¥–µ–Ω\n');

  console.log('–¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ—á–∏—Å–ª–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞ ("abc")');
  const output4 = runAppWithInput('abc');
  assert.ok(output4.includes('–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ'), '–¢–µ—Å—Ç 4 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω');
  console.log('–¢–µ—Å—Ç 4 –ø—Ä–æ–π–¥–µ–Ω\n');

  console.log('–í—Å–µ —Ç–µ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã! üéâ');
}

testApp();
